{"version":3,"sources":["App.js","index.js"],"names":["App","distortion","showIcon","backgroundColor","stepColors","circles","Array","fill","getRandomNumber","max","min","Math","floor","random","useEffect","interval","setInterval","console","log","clearInterval","className","style","xmlns","id","version","filter","viewBox","preserveAspectRatio","map","circle","r","cx","cy","strokeWidth","strokeDasharray","styles","pointerEvents","in","stdDeviation","result","mode","values","x1","y1","x2","y2","offset","stopColor","class","stroke","d","defaultProps","ReactDOM","render","StrictMode","window","templateProps","document","getElementById"],"mappings":"0MAIA,SAASA,EAAT,GAAqE,IAAtDC,EAAqD,EAArDA,WAAYC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,WAC9CC,EAAU,IAAIC,MAAM,IAAIC,KAAK,KAEnC,SAASC,EAAgBC,EAAKC,GAC5B,OAAOC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAMC,GAW1C,OARAI,qBAAU,WACR,IAAMC,EAAWC,aAAY,WAC3BC,QAAQC,IAAI,iCACX,KAEH,OAAO,kBAAMC,cAAcJ,MAC1B,IAGD,sBAAKK,UAAU,MAAMC,MAAO,CAAElB,gBAAiBA,GAA/C,UACE,qBACEmB,MAAM,6BACNC,GAAG,QACHC,QAAQ,MACRC,OAAO,YACPC,QAAQ,kBACRC,oBAAoB,gBANtB,SAQGtB,EAAQuB,KAAI,SAACC,GAAD,OACX,wBAEEC,EAAGnB,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,GACrCkB,GAAIpB,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBmB,GAAIrB,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBoB,YAAatB,KAAKC,MAAsB,GAAhBD,KAAKE,SAAgB,GAC7CqB,gBAAe,UAAK1B,EAAgB,IAAK,IAA1B,YAAiCA,EAAgB,IAAK,OALhEqB,QAUX,qBAAKM,OAAQ,CAAEC,cAAe,QAA9B,SACE,iCACE,yBAAQb,GAAG,MAAX,UACE,gCAAgBc,GAAG,gBAAgBC,aAAcrC,EAAYsC,OAAO,SACpE,+BAAeF,GAAG,OAAOG,KAAK,SAASC,OAAO,gDAAgDF,OAAO,QACrG,+BAAeF,GAAG,MAAMG,KAAK,SAASC,OAAO,iDAAiDF,OAAO,YAGvG,iCAAgBhB,GAAG,SAASmB,GAAG,KAAKC,GAAG,KAAKC,GAAG,OAAOC,GAAG,OAAzD,UACE,sBAAMC,OAAO,KAAKC,UAAW3C,EAAW,KACxC,sBAAM0C,OAAO,OAAOC,UAAW3C,EAAW,aAI/CF,GACC,qBAAKwB,QAAQ,YAAYsB,MAAM,YAAYC,OAAO,QAAQhB,YAAY,IAAI1B,KAAK,OAA/E,SACE,sBAAM0B,YAAY,MAAMiB,EAAE,qEAOrBlD,QAEfA,EAAImD,aAAe,CACjBlD,WAAY,IACZC,UAAU,EACVC,gBAAiB,UACjBC,WAAY,CAAC,UAAW,YClE1BgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,eAASC,OAAOC,kBAElBC,SAASC,eAAe,W","file":"static/js/main.30e977f0.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport 'minireset.css';\nimport './App.css';\n\nfunction App({ distortion, showIcon, backgroundColor, stepColors }) {\n  const circles = new Array(20).fill(\" \")\n\n  function getRandomNumber(max, min) {\n    return Math.floor(Math.random() * max + min);\n  }\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      console.log('This will run every second!');\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"App\" style={{ backgroundColor: backgroundColor }}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        id=\"bgart\"\n        version=\"1.1\"\n        filter=\"url(#goo)\"\n        viewBox=\"100 100 600 600\"\n        preserveAspectRatio=\"xMidYMid meet\"\n      >\n        {circles.map((circle) => (\n          <circle\n            key={circle}\n            r={Math.floor(Math.random() * 800) + 80}\n            cx={Math.floor(Math.random() * 900)}\n            cy={Math.floor(Math.random() * 900)}\n            strokeWidth={Math.floor(Math.random() * 50 + 5)}\n            strokeDasharray={`${getRandomNumber(300, 50)} ${getRandomNumber(500, 900)}`}\n          />\n        ))}\n      </svg>\n\n      <svg styles={{ pointerEvents: 'none' }}>\n        <defs>\n          <filter id=\"goo\">\n            <feGaussianBlur in=\"SourceGraphic\" stdDeviation={distortion} result=\"blur\" />\n            <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 .5 3 .06\" result=\"goo\" />\n            <feColorMatrix in=\"goo\" mode=\"matrix\" values=\"1 0 0 1 0  0 1 0 0 0  0 0 -1 0 .1  0 1 5 56 -5\" result=\"goo2\" />\n          </filter>\n\n          <linearGradient id=\"bggrad\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n            <stop offset=\"0%\" stopColor={stepColors[0]} />\n            <stop offset=\"100%\" stopColor={stepColors[1]} />\n          </linearGradient>\n        </defs>\n      </svg>\n      {showIcon && (\n        <svg viewBox=\"-3 0 8 11\" class=\"make-logo\" stroke=\"white\" strokeWidth=\"1\" fill=\"none\">\n          <path strokeWidth=\"1.5\" d=\"m -2 8.2 a 1 1 0 0 1 4 0 m -2 -3.25 a 1 -1 0 0 1 4 0 v 3.25\" />\n        </svg>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\nApp.defaultProps = {\n  distortion: 100,\n  showIcon: true,\n  backgroundColor: '#205efe',\n  stepColors: ['#e40046', '#ff8674']\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App {...window.templateProps} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}